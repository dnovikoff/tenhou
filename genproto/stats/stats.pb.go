// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats/stats.proto

package stats // import "github.com/dnovikoff/tenhou/genproto/stats"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LobbyType int32

const (
	LobbyType_LOBBY_TYPE_KU       LobbyType = 0
	LobbyType_LOBBY_TYPE_DAN      LobbyType = 1
	LobbyType_LOBBY_TYPE_UPPERDAN LobbyType = 2
	LobbyType_LOBBY_TYPE_PHOENIX  LobbyType = 3
	LobbyType_LOBBY_TYPE_DZ       LobbyType = 4
	LobbyType_LOBBY_TYPE_X1       LobbyType = 5
	LobbyType_LOBBY_TYPE_X2       LobbyType = 6
	LobbyType_LOBBY_TYPE_X3       LobbyType = 7
)

var LobbyType_name = map[int32]string{
	0: "LOBBY_TYPE_KU",
	1: "LOBBY_TYPE_DAN",
	2: "LOBBY_TYPE_UPPERDAN",
	3: "LOBBY_TYPE_PHOENIX",
	4: "LOBBY_TYPE_DZ",
	5: "LOBBY_TYPE_X1",
	6: "LOBBY_TYPE_X2",
	7: "LOBBY_TYPE_X3",
}
var LobbyType_value = map[string]int32{
	"LOBBY_TYPE_KU":       0,
	"LOBBY_TYPE_DAN":      1,
	"LOBBY_TYPE_UPPERDAN": 2,
	"LOBBY_TYPE_PHOENIX":  3,
	"LOBBY_TYPE_DZ":       4,
	"LOBBY_TYPE_X1":       5,
	"LOBBY_TYPE_X2":       6,
	"LOBBY_TYPE_X3":       7,
}

func (x LobbyType) String() string {
	return proto.EnumName(LobbyType_name, int32(x))
}
func (LobbyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{0}
}

type GameLength int32

const (
	GameLength_GAME_LENGTH_SOUTH GameLength = 0
	GameLength_GAME_LENGTH_EAST  GameLength = 1
	GameLength_GAME_LENGTH_ONE   GameLength = 2
)

var GameLength_name = map[int32]string{
	0: "GAME_LENGTH_SOUTH",
	1: "GAME_LENGTH_EAST",
	2: "GAME_LENGTH_ONE",
}
var GameLength_value = map[string]int32{
	"GAME_LENGTH_SOUTH": 0,
	"GAME_LENGTH_EAST":  1,
	"GAME_LENGTH_ONE":   2,
}

func (x GameLength) String() string {
	return proto.EnumName(GameLength_name, int32(x))
}
func (GameLength) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{1}
}

type GameType int32

const (
	GameType_GAME_TYPE_4 GameType = 0
	GameType_GAME_TYPE_3 GameType = 1
)

var GameType_name = map[int32]string{
	0: "GAME_TYPE_4",
	1: "GAME_TYPE_3",
}
var GameType_value = map[string]int32{
	"GAME_TYPE_4": 0,
	"GAME_TYPE_3": 1,
}

func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}
func (GameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{2}
}

type GameSpeed int32

const (
	GameSpeed_GAME_SPEED_NORMAL GameSpeed = 0
	GameSpeed_GAME_SPEED_FAST   GameSpeed = 1
)

var GameSpeed_name = map[int32]string{
	0: "GAME_SPEED_NORMAL",
	1: "GAME_SPEED_FAST",
}
var GameSpeed_value = map[string]int32{
	"GAME_SPEED_NORMAL": 0,
	"GAME_SPEED_FAST":   1,
}

func (x GameSpeed) String() string {
	return proto.EnumName(GameSpeed_name, int32(x))
}
func (GameSpeed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{3}
}

type Akkas int32

const (
	Akkas_AKKAS_YES Akkas = 0
	Akkas_AKKAS_NO  Akkas = 1
)

var Akkas_name = map[int32]string{
	0: "AKKAS_YES",
	1: "AKKAS_NO",
}
var Akkas_value = map[string]int32{
	"AKKAS_YES": 0,
	"AKKAS_NO":  1,
}

func (x Akkas) String() string {
	return proto.EnumName(Akkas_name, int32(x))
}
func (Akkas) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{4}
}

type Tanyao int32

const (
	Tanyao_TANYAO_YES Tanyao = 0
	Tanyao_TANYAO_NO  Tanyao = 1
)

var Tanyao_name = map[int32]string{
	0: "TANYAO_YES",
	1: "TANYAO_NO",
}
var Tanyao_value = map[string]int32{
	"TANYAO_YES": 0,
	"TANYAO_NO":  1,
}

func (x Tanyao) String() string {
	return proto.EnumName(Tanyao_name, int32(x))
}
func (Tanyao) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{5}
}

type NumberType int32

const (
	NumberType_NO_NUMBER NumberType = 0
	NumberType_NUMBER_2  NumberType = 2
	NumberType_NUMBER_5  NumberType = 5
	NumberType_NUMBER_0  NumberType = 10
)

var NumberType_name = map[int32]string{
	0:  "NO_NUMBER",
	2:  "NUMBER_2",
	5:  "NUMBER_5",
	10: "NUMBER_0",
}
var NumberType_value = map[string]int32{
	"NO_NUMBER": 0,
	"NUMBER_2":  2,
	"NUMBER_5":  5,
	"NUMBER_0":  10,
}

func (x NumberType) String() string {
	return proto.EnumName(NumberType_name, int32(x))
}
func (NumberType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{6}
}

type Player struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Score                int64    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Coins                int64    `protobuf:"varint,3,opt,name=coins,proto3" json:"coins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{0}
}
func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (dst *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(dst, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Player) GetCoins() int64 {
	if m != nil {
		return m.Coins
	}
	return 0
}

type Record struct {
	Time     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Duration *duration.Duration   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Number   int64                `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Lobby    LobbyType            `protobuf:"varint,4,opt,name=lobby,proto3,enum=stats.LobbyType" json:"lobby,omitempty"`
	Length   GameLength           `protobuf:"varint,5,opt,name=length,proto3,enum=stats.GameLength" json:"length,omitempty"`
	Type     GameType             `protobuf:"varint,6,opt,name=type,proto3,enum=stats.GameType" json:"type,omitempty"`
	Akkas    Akkas                `protobuf:"varint,7,opt,name=akkas,proto3,enum=stats.Akkas" json:"akkas,omitempty"`
	Tanyao   Tanyao               `protobuf:"varint,8,opt,name=tanyao,proto3,enum=stats.Tanyao" json:"tanyao,omitempty"`
	// Some strange numbers, that are not ascii numbers like '５' or '２'
	NumberType           NumberType `protobuf:"varint,9,opt,name=number_type,json=numberType,proto3,enum=stats.NumberType" json:"number_type,omitempty"`
	Players              []*Player  `protobuf:"bytes,10,rep,name=players,proto3" json:"players,omitempty"`
	Id                   string     `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	IsDz                 bool       `protobuf:"varint,12,opt,name=is_dz,json=isDz,proto3" json:"is_dz,omitempty"`
	IsChampionLobby      bool       `protobuf:"varint,13,opt,name=is_champion_lobby,json=isChampionLobby,proto3" json:"is_champion_lobby,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_ab9f525f30e7f75c, []int{1}
}
func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (dst *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(dst, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Record) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Record) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Record) GetLobby() LobbyType {
	if m != nil {
		return m.Lobby
	}
	return LobbyType_LOBBY_TYPE_KU
}

func (m *Record) GetLength() GameLength {
	if m != nil {
		return m.Length
	}
	return GameLength_GAME_LENGTH_SOUTH
}

func (m *Record) GetType() GameType {
	if m != nil {
		return m.Type
	}
	return GameType_GAME_TYPE_4
}

func (m *Record) GetAkkas() Akkas {
	if m != nil {
		return m.Akkas
	}
	return Akkas_AKKAS_YES
}

func (m *Record) GetTanyao() Tanyao {
	if m != nil {
		return m.Tanyao
	}
	return Tanyao_TANYAO_YES
}

func (m *Record) GetNumberType() NumberType {
	if m != nil {
		return m.NumberType
	}
	return NumberType_NO_NUMBER
}

func (m *Record) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *Record) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Record) GetIsDz() bool {
	if m != nil {
		return m.IsDz
	}
	return false
}

func (m *Record) GetIsChampionLobby() bool {
	if m != nil {
		return m.IsChampionLobby
	}
	return false
}

func init() {
	proto.RegisterType((*Player)(nil), "stats.Player")
	proto.RegisterType((*Record)(nil), "stats.Record")
	proto.RegisterEnum("stats.LobbyType", LobbyType_name, LobbyType_value)
	proto.RegisterEnum("stats.GameLength", GameLength_name, GameLength_value)
	proto.RegisterEnum("stats.GameType", GameType_name, GameType_value)
	proto.RegisterEnum("stats.GameSpeed", GameSpeed_name, GameSpeed_value)
	proto.RegisterEnum("stats.Akkas", Akkas_name, Akkas_value)
	proto.RegisterEnum("stats.Tanyao", Tanyao_name, Tanyao_value)
	proto.RegisterEnum("stats.NumberType", NumberType_name, NumberType_value)
}

func init() { proto.RegisterFile("stats/stats.proto", fileDescriptor_stats_ab9f525f30e7f75c) }

var fileDescriptor_stats_ab9f525f30e7f75c = []byte{
	// 688 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x94, 0xd1, 0x6f, 0xda, 0x48,
	0x10, 0xc6, 0x31, 0x60, 0x07, 0x86, 0x00, 0xcb, 0x24, 0x97, 0xf3, 0xe5, 0xe1, 0x0e, 0xe5, 0xee,
	0x1a, 0x6a, 0x45, 0xd0, 0x92, 0x46, 0x7d, 0x36, 0xc5, 0x0d, 0x55, 0x88, 0x8d, 0x8c, 0x91, 0x42,
	0x5e, 0x2c, 0x03, 0x0e, 0x58, 0x01, 0x1b, 0x61, 0x53, 0x89, 0xfc, 0x53, 0xfd, 0xf7, 0xfa, 0x58,
	0x31, 0x6b, 0x88, 0x43, 0x5f, 0xd0, 0x7e, 0xdf, 0xf7, 0x63, 0x66, 0xbc, 0xbb, 0x36, 0x54, 0xc2,
	0xc8, 0x89, 0xc2, 0x06, 0xfd, 0xd6, 0x97, 0xab, 0x20, 0x0a, 0x50, 0x24, 0x71, 0xfe, 0xcf, 0x34,
	0x08, 0xa6, 0x73, 0xb7, 0x41, 0xe6, 0x68, 0xfd, 0xd4, 0x88, 0xbc, 0x85, 0x1b, 0x46, 0xce, 0x62,
	0xc9, 0xb9, 0xf3, 0xbf, 0x0f, 0x81, 0xc9, 0x7a, 0xe5, 0x44, 0x5e, 0xe0, 0xf3, 0xfc, 0xa2, 0x03,
	0x52, 0x6f, 0xee, 0x6c, 0xdc, 0x15, 0x22, 0x64, 0x7d, 0x67, 0xe1, 0xca, 0x42, 0x55, 0xa8, 0xe5,
	0x4d, 0x5a, 0xe3, 0x29, 0x88, 0xe1, 0x38, 0x58, 0xb9, 0x72, 0xba, 0x2a, 0xd4, 0x32, 0x26, 0x17,
	0x5b, 0x77, 0x1c, 0x78, 0x7e, 0x28, 0x67, 0xb8, 0x4b, 0xe2, 0xe2, 0x67, 0x06, 0x24, 0xd3, 0x1d,
	0x07, 0xab, 0x09, 0xd6, 0x21, 0xbb, 0x9d, 0x83, 0x4a, 0x15, 0x9a, 0xe7, 0x75, 0x3e, 0x43, 0x7d,
	0x37, 0x43, 0xdd, 0xda, 0x0d, 0x69, 0x12, 0x87, 0x37, 0x90, 0xdb, 0x8d, 0x45, 0x9d, 0x0a, 0xcd,
	0xbf, 0x7e, 0xfb, 0x4f, 0x3b, 0x06, 0xcc, 0x3d, 0x8a, 0x67, 0x20, 0xf9, 0xeb, 0xc5, 0xc8, 0x5d,
	0xc5, 0x83, 0xc4, 0x0a, 0xdf, 0x81, 0x38, 0x0f, 0x46, 0xa3, 0x8d, 0x9c, 0xad, 0x0a, 0xb5, 0x52,
	0x93, 0xd5, 0xf9, 0xc6, 0x75, 0xb7, 0x9e, 0xb5, 0x59, 0xba, 0x26, 0x8f, 0xf1, 0x3d, 0x48, 0x73,
	0xd7, 0x9f, 0x46, 0x33, 0x59, 0x24, 0xb0, 0x12, 0x83, 0xb7, 0xce, 0xc2, 0xed, 0x52, 0x60, 0xc6,
	0x00, 0xfe, 0x0b, 0xd9, 0x68, 0xb3, 0x74, 0x65, 0x89, 0xc0, 0x72, 0x02, 0xa4, 0x82, 0x14, 0xe2,
	0x05, 0x88, 0xce, 0xf3, 0xb3, 0x13, 0xca, 0x47, 0x44, 0x1d, 0xc7, 0x94, 0xba, 0xf5, 0x4c, 0x1e,
	0xe1, 0xff, 0x20, 0x45, 0x8e, 0xbf, 0x71, 0x02, 0x39, 0x47, 0x50, 0x31, 0x86, 0x2c, 0x32, 0xcd,
	0x38, 0xc4, 0x26, 0x14, 0xf8, 0xc3, 0xd8, 0xd4, 0x36, 0xff, 0x66, 0x3e, 0x9d, 0x12, 0x6a, 0x0c,
	0xfe, 0x7e, 0x8d, 0x97, 0x70, 0xb4, 0xa4, 0xa3, 0x0c, 0x65, 0xa8, 0x66, 0x6a, 0x85, 0x7d, 0x6d,
	0x7e, 0xc0, 0xe6, 0x2e, 0xc5, 0x12, 0xa4, 0xbd, 0x89, 0x5c, 0xa0, 0x73, 0x4e, 0x7b, 0x13, 0x3c,
	0x01, 0xd1, 0x0b, 0xed, 0xc9, 0x8b, 0x7c, 0x5c, 0x15, 0x6a, 0x39, 0x33, 0xeb, 0x85, 0xed, 0x17,
	0x54, 0xa0, 0xe2, 0x85, 0xf6, 0x78, 0xe6, 0x2c, 0x96, 0x5e, 0xe0, 0xdb, 0x7c, 0x43, 0x8b, 0x04,
	0x94, 0xbd, 0xf0, 0x4b, 0xec, 0xd3, 0x9e, 0x2a, 0x3f, 0x04, 0xc8, 0xef, 0x77, 0x17, 0x2b, 0x50,
	0xec, 0x1a, 0xad, 0xd6, 0xd0, 0xb6, 0x86, 0x3d, 0xcd, 0xbe, 0x1b, 0xb0, 0x14, 0x22, 0x94, 0x12,
	0x56, 0x5b, 0xd5, 0x99, 0x80, 0x7f, 0xc2, 0x49, 0xc2, 0x1b, 0xf4, 0x7a, 0x9a, 0xb9, 0x0d, 0xd2,
	0x78, 0x06, 0x98, 0x08, 0x7a, 0x1d, 0x43, 0xd3, 0xbf, 0x3d, 0xb0, 0xcc, 0x41, 0xdd, 0xf6, 0x23,
	0xcb, 0x1e, 0x58, 0x0f, 0x1f, 0x99, 0x78, 0x68, 0x35, 0x99, 0x74, 0x68, 0x5d, 0xb3, 0x23, 0x45,
	0x07, 0x78, 0x3d, 0x65, 0xfc, 0x03, 0x2a, 0xb7, 0xea, 0xbd, 0x66, 0x77, 0x35, 0xfd, 0xd6, 0xea,
	0xd8, 0x7d, 0x63, 0x60, 0x75, 0x58, 0x0a, 0x4f, 0x81, 0x25, 0x6d, 0x4d, 0xed, 0x5b, 0x4c, 0xc0,
	0x13, 0x28, 0x27, 0x5d, 0x43, 0xd7, 0x58, 0x5a, 0xb9, 0x82, 0xdc, 0xee, 0x32, 0x60, 0x19, 0x0a,
	0x04, 0x50, 0xb7, 0x4f, 0x2c, 0xf5, 0xd6, 0xb8, 0x66, 0x82, 0xf2, 0x19, 0xf2, 0x5b, 0xba, 0xbf,
	0x74, 0xdd, 0xc9, 0xbe, 0x79, 0xbf, 0xa7, 0x69, 0x6d, 0x5b, 0x37, 0xcc, 0x7b, 0xb5, 0xcb, 0x52,
	0xfb, 0x36, 0xdc, 0xfe, 0x4a, 0xbd, 0x95, 0xff, 0x40, 0xa4, 0xdb, 0x84, 0x45, 0xc8, 0xab, 0x77,
	0x77, 0x6a, 0xdf, 0x1e, 0x6a, 0x7d, 0x96, 0xc2, 0x63, 0xc8, 0x71, 0xa9, 0x1b, 0x4c, 0x50, 0x2e,
	0x41, 0xe2, 0xd7, 0x09, 0x4b, 0x00, 0x96, 0xaa, 0x0f, 0x55, 0x23, 0xe6, 0x8a, 0x90, 0x8f, 0x35,
	0x81, 0x1a, 0xc0, 0xeb, 0x5d, 0xda, 0x86, 0xba, 0x61, 0xeb, 0x83, 0xfb, 0x96, 0x66, 0xf2, 0x9a,
	0x7c, 0x6d, 0x37, 0x59, 0x3a, 0xa1, 0x6e, 0x98, 0x98, 0x50, 0x1f, 0x18, 0xb4, 0xae, 0x1e, 0x95,
	0xa9, 0x17, 0xcd, 0xd6, 0xa3, 0xfa, 0x38, 0x58, 0x34, 0x26, 0x7e, 0xf0, 0xdd, 0x7b, 0x0e, 0x9e,
	0x9e, 0x1a, 0x91, 0xeb, 0xcf, 0x82, 0x75, 0x63, 0xea, 0xfa, 0xf4, 0x16, 0xf3, 0xef, 0xd7, 0x48,
	0x22, 0x71, 0xfd, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xe7, 0x87, 0xf1, 0xd5, 0x04, 0x00, 0x00,
}
